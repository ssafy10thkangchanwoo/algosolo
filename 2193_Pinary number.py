
# 조건
# 1. 0으로 시작하지 않는다 
# 2. 1이 연속으로 2번 나타나지 않는다. 


# 조건 재정리
# 1로 시작해야하며 n번째 수가 1이면 다음수는 반드시 0이여야 한다.

# 90자리의 값까지 봐야하는데 전부 검사하려면 2^89번 확인해야 한다.

N = int(input())

# 트리를 만들면 0,1의 분기가 생긴다.
# N번째 단계의 정점0은 N+1번째 단계 정점0, 정점1을 갈 수 있다
# N번쨰 단계의 정점1은 N+1단계 정점 0을 갈 수 있다.
# N번쨰 단계일 때 0일 때의 케이스 수와 1일때의 케이스 수를 배열로 담는다

arr = [[0,0] for _ in range(91)] ## 처음에 range를 N으로 했는데 N == 2일 때 2번 index 접근 불가함.

arr[1] = [0,1]
arr[2] = [1,0]

if N >= 3:
    for n in range(3, N+1):
        arr[n][0] = arr[n-1][0] + arr[n-1][1]
        arr[n][1] = arr[n-1][0]
    print(sum(arr[N]))

else:
    print(1)




